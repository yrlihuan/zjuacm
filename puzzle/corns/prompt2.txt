实现cpp程序，通过搜索的方式解决一个puzzle. 这个puzzle类似于俄罗斯方块, 不过是在一个环形结构上, 名字叫做corn(环形是围绕玉米棒子)。 这个一共七层，每层有14个格子。有若干个不同形状的玉米粒团。每个玉米粒团的宽度都是3， 高度不一定。 比如可以用 [[1, 1, 1], [0, 1, 1]] 描述一个有两层高， 第一层有三个， 第二层有两个的玉米粒团。 请写一个程序， 搜索这个问题的解决方案。请注意, 玉米的方向是可以调换的. 比如[[1, 1, 0], [1, 1, 1]] 和  [[1, 1, 1], [0, 1, 1]] 是一样的. 即 part 和 reverse([reverse(level) for level in part]) 是一样的。在搜索的过程中，先尝试找出所有能够填满第一层的方案，并去重。这样可以在后续的搜索中过滤掉大量重复的搜索过程。

玉米团的定义如下：

CORN_PIECES = [
    [[1, 1, 1], [0, 1, 1]],
    [[1, 1, 1], [0, 1, 1]],
    [[1, 1, 1], [0, 0 ,1]],
    [[1, 1, 0], [1, 1, 1], [0, 1, 1]],
    [[1, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 1]],
    [[1, 1, 1], [0, 1, 0], [0, 1, 0], [0, 1, 0]],
    [[1, 1, 1], [0, 0, 1]],
    [[1, 1, 1], [1, 1, 0]],
    [[1, 1, 1], [0, 0, 1], [0, 0, 1]],
    [[1, 1, 1], [1, 0, 1], [0, 0, 1]],
    [[1, 1, 1], [1, 0, 1], [0, 0, 1]],
    [[1, 1, 1], [1, 0, 1], [1, 0, 1]],
    [[1, 1, 0], [1, 1, 1], [0, 0, 1]],
    [[1, 1, 1], [1, 1, 0], [1, 0, 0]],
    [[1, 1, 1], [1, 1, 0], [1, 0, 0], [1, 0, 0]],
    [[0, 1, 1], [1, 1, 1], [0, 1, 0]],
    [[0, 1, 1], [1, 1, 1], [0, 0, 1], [0, 0, 1]],
]

